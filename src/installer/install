#!/bin/bash
# input-modifier universal installer

RESPONSE=""
INSEXTRAFAIL=0

if [ -e /opt/input-modifier/bin/imodd ]
  then echo "input-modifier already installed."
       exit 1
fi

if [ -e /usr/bin/imodd ]
  then echo "input-modifier already installed as a distribution package."
       exit 1
fi

if [ $UID -ne 0 ]
  then echo "you must run this installer as root."
       exit 1
fi

echo "please read the license terms first."
sleep 2
less LICENSE || { echo "license file not there..."; exit 1; }
echo -n "do you agree? (y/N) "
read LRESPONSE

if [ -z $LRESPONSE ]
  then echo "can't proceed."
       exit 1
fi

if ! [[ $LRESPONSE =~ ^[yY].* ]]
  then echo "can't proceed."
       exit 1
fi

echo -n "input-modifier is going to be installed. are you sure about this? (y/N) "
read RESPONSE

if [ -z $RESPONSE ]
  then exit 1
fi

if [[ $RESPONSE =~ ^[yY].* ]]
  then echo "going ahead."
       if ! grep -q -E "^input:" /etc/group
         then echo "creating input group..."
              groupadd input || exit 1
              echo "adding input group udev rule..."
              install -m644 98-imod-ubuntu14.rules /lib/udev/rules.d/ || { groupdel input; exit 1; }
              echo "setting input device permissions..."
              chmod 660 /dev/input/event* || INSEXTRAFAIL=1
              chown root:input /dev/input/event* || INSEXTRAFAIL=1
       fi
       echo "creating program directory..." 
       mkdir -p /opt/input-modifier || exit 1
       echo "extracting program..."
       tar -C /opt -xvf installdata.tar || { rm -r /opt/input-modifier; exit 1; }
       echo "creating symlinks..."
       ln -s /opt/input-modifier/bin/imodd /usr/bin/imodd || { rm -r /opt/input-modifier; exit 1; }
       ln -s /opt/input-modifier/bin/imod-cli /usr/bin/imod-cli || { rm /usr/bin/imodd; rm -r /opt/input-modifier; exit 1; }
       echo "adding udev rule..."
       install -m644 99-imod.rules /lib/udev/rules.d/ || { rm -r /opt/input-modifier; exit 1; }
       echo "reloading udev rules..."
       { udevadm control --reload-rules && udevadm trigger; } || INSEXTRAFAIL=1
       echo "waiting 2 seconds..."
       sleep 2
       echo "loading uinput module..."
       modprobe uinput || INSEXTRAFAIL=1
       if [ -e /dev/uinput ]
         then echo "setting uinput permissions..."
              chmod 660 /dev/uinput || INSEXTRAFAIL=1
              chown root:input /dev/uinput || INSEXTRAFAIL=1
              sleep 0.5
              echo "testing udev rule..."
              touch /dev/uinput
              sleep 1
              UISTAT=$(stat -c %a /dev/uinput)
              if [ $UISTAT == "600" ]
                then INSEXTRAFAIL=1
              fi
         else echo "uinput does not exist..." || INSEXTRAFAIL=1
       fi
       echo "installation finished!"
       if [ $INSEXTRAFAIL -eq 1 ]
         then echo "however, you will have to reboot before using input-modifier"
              echo "because we couldn't do some stuff required for it to work immediately."
       fi
       echo "add yourself to the input group:"
       echo "$ sudo usermod -a -G input <username>"
       echo "then re-login (logout, then login) in order to be able to use the program."
fi
